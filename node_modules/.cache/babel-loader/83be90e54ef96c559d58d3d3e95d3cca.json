{"ast":null,"code":"var _jsxFileName = \"D:\\\\trueapp\\\\true\\\\src\\\\componets\\\\Login\\\\Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Login/Login.css';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {},\n      email: '',\n      password: '',\n      msgdata: '',\n      redirectToReferrer: false\n    };\n    this.login = this.login.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  login(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      //alert(\"Form submitted\");\n      if (this.state.email && this.state.password) {\n        let init = {\n          method: 'POST',\n          headers: {\n            'content-type': 'multipart/form-data'\n          },\n          mode: 'cors',\n          cache: 'default',\n          dataType: 'json',\n          type: 'POST',\n          async: true\n        };\n        const email = this.state.email;\n        const password = this.state.password;\n        let formData = new FormData();\n        formData.append('loginid', email);\n        formData.append('pass', password);\n        axios.post('https://idea.truebook.in/tps_api/index.php?view=login', formData, init).then(response => {\n          console.log(response.data);\n          sessionStorage.setItem('formData', JSON.stringify(response));\n          localStorage.setItem('formData', JSON.stringify(response)); //  const company_id = response.data.data.tpsData.company_id;\n          // alert( response.data.data.tpsData.email);\n\n          if (response.data.msgcode === 0) {\n            // alert(response.data.msgcode);\n            this.props.history.push(\"/dashboard\");\n          } else {\n            alert(\"Invalid username or Password\");\n          }\n        }).catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false\n          });\n        });\n      }\n    } else {// alert(\"Form has errors.\")\n    }\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Password is required\";\n    } //Email\n\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"*Email is required\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      alert(\"Form submitted\");\n    } else {\n      alert(\"Form has errors.\");\n    }\n  }\n\n  onChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"hgroup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"icon novi-icon icon-circle icon-bordered icon-lg icon-default fa fa-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"offset-top-24 text-darker big font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Login to your account\"), React.createElement(\"p\", {\n      class: \"text-extra-small text-dark offset-top-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Enter your credentials below\")))), React.createElement(\"form\", {\n      name: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"email\",\n      type: \"text\",\n      name: \"email\",\n      className: \"temail\",\n      placeholder: \"Enter Email or Phone No\",\n      value: this.state.fields[\"email\"],\n      onChange: this.onChange.bind(this, \"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.errors[\"email\"])), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"password\",\n      type: \"password\",\n      name: \"password\",\n      className: \"tpass\",\n      placeholder: \"Enter Password\",\n      value: this.state.fields[\"password\"],\n      onChange: this.onChange.bind(this, \"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.errors[\"password\"])), React.createElement(\"button\", {\n      onClick: this.login,\n      type: \"button\",\n      className: \"buttonui1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" Login \"), React.createElement(\"div\", {\n      className: \"ripples buttonRipples\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ripplesCircle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"powered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Create New Register\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["D:\\trueapp\\true\\src\\componets\\Login\\Login.js"],"names":["React","Link","axios","Login","Component","constructor","props","state","fields","errors","email","password","msgdata","redirectToReferrer","login","bind","onChange","e","preventDefault","handleValidation","init","method","headers","mode","cache","dataType","type","async","formData","FormData","append","post","then","response","console","log","data","sessionStorage","setItem","JSON","stringify","localStorage","msgcode","history","push","alert","catch","err","setState","loading","formIsValid","contactSubmit","field","target","value","name","render","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Login/Login.css';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Login extends React.Component{\r\n  constructor(props){   \r\n    super(props);\r\n\r\n    this.state = {\r\n         fields: {},\r\n         errors: {},\r\n         email:'',\r\n         password:'',\r\n         msgdata:'',\r\n         redirectToReferrer: false\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n }\r\n\r\n \r\n\r\n login(e){\r\n  \r\n   e.preventDefault();\r\n   if(this.handleValidation()){\r\n      //alert(\"Form submitted\");\r\n      if(this.state.email && this.state.password){\r\n        let init = {\r\n           method: 'POST',\r\n           headers: { 'content-type': 'multipart/form-data' },\r\n           mode: 'cors',\r\n           cache: 'default',\r\n           dataType: 'json',\r\n           type:     'POST',\r\n           async:    true,\r\n         };\r\n  \r\n         const email= this.state.email\r\n         const password= this.state.password\r\n         \r\n         \r\n         let formData = new FormData();\r\n  \r\n         formData.append('loginid', email);\r\n         formData.append('pass', password);\r\n       \r\n         axios.post('https://idea.truebook.in/tps_api/index.php?view=login', formData,init)\r\n         .then(response => {\r\n           console.log(response.data);\r\n           sessionStorage.setItem('formData',JSON.stringify(response));\r\n           localStorage.setItem('formData',JSON.stringify(response));\r\n          //  const company_id = response.data.data.tpsData.company_id;\r\n            // alert( response.data.data.tpsData.email);\r\n          \r\n           if(response.data.msgcode === 0){\r\n            // alert(response.data.msgcode);\r\n            this.props.history.push(\"/dashboard\");\r\n           }else{\r\n              alert(\"Invalid username or Password\");\r\n             \r\n          }\r\n           \r\n         })\r\n\r\n         .catch(err => {\r\n           console.log(err);\r\n           this.setState({\r\n             loading:false,\r\n           })\r\n         })\r\n        \r\n        \r\n        }\r\n\r\n   }\r\n  \r\n   else{ \r\n     // alert(\"Form has errors.\")\r\n   }\r\n\r\n   \r\n      \r\n }\r\n \r\n     \r\n handleValidation(){\r\n  let fields = this.state.fields;\r\n  let errors = {};\r\n  let formIsValid = true;\r\n\r\n  //Name\r\n   if(!fields[\"password\"]){\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"*Password is required\";\r\n   }\r\n\r\n\r\n  //Email\r\n  if(!fields[\"email\"]){\r\n     formIsValid = false;\r\n     errors[\"email\"] = \"*Email is required\";\r\n  }\r\n  \r\n\r\n this.setState({errors: errors});\r\n return formIsValid;\r\n}\r\n\r\n\r\ncontactSubmit(e){\r\n  e.preventDefault();\r\n  if(this.handleValidation()){\r\n     alert(\"Form submitted\");\r\n  }else{ \r\n     alert(\"Form has errors.\")\r\n  }\r\n\r\n}\r\n\r\nonChange(field, e){         \r\n  let fields = this.state.fields;\r\n  fields[field] = e.target.value;        \r\n  this.setState({fields});\r\n  this.setState({[e.target.name]:e.target.value});\r\n}\r\n\r\n\r\n     \r\n    render() {\r\n               \r\n              \r\n            return (\r\n              <div className=\"login\">\r\n                 \r\n                   <div className=\"loginForm\"> \r\n                        <hgroup>\r\n                        <div class=\"text-center\">\r\n                        <span class=\"icon novi-icon icon-circle icon-bordered icon-lg icon-default fa fa-user\"></span>\r\n                        <div>\r\n                            <div class=\"offset-top-24 text-darker big font-weight-bold\">Login to your account</div>\r\n                            <p class=\"text-extra-small text-dark offset-top-4\">Enter your credentials below</p>\r\n                        </div>\r\n                    </div>\r\n                        </hgroup>\r\n                        <form name=\"login\">\r\n                        <div className=\"group\">\r\n                    <input ref=\"email\" type=\"text\" name=\"email\" className=\"temail\" placeholder=\"Enter Email or Phone No\" \r\n                    value={this.state.fields[\"email\"]} onChange={this.onChange.bind(this, \"email\")}  />\r\n                     <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\r\n             \r\n                        </div>\r\n\r\n\r\n                        <div className=\"group\">\r\n                            <input ref=\"password\" type=\"password\" name=\"password\" className=\"tpass\" placeholder=\"Enter Password\"\r\n               value={this.state.fields[\"password\"]} onChange={this.onChange.bind(this, \"password\")} /><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                          <span style={{color: \"red\"}}>{this.state.errors[\"password\"]}</span>\r\n                          \r\n                        </div>\r\n                        <button \r\n                        onClick={this.login} type=\"button\" className=\"buttonui1 \"> \r\n                        <span> Login </span>\r\n                                <div className=\"ripples buttonRipples\"><span className=\"ripplesCircle\"></span></div>\r\n                            </button>        \r\n                        </form>\r\n                        <div className=\"powered\">\r\n                        <Link to=\"/register\" >Create New Register</Link>\r\n                        </div>\r\n                    </div>\r\n              </div>\r\n            );\r\n          }\r\n}\r\n\r\n\r\n \r\nexport default Login;"]},"metadata":{},"sourceType":"module"}